0x0003: IMM i 0xab

; __...__
0x0006: PUSH a
0x0009: PUSH b
0x000c: PUSH c

0x000f: POP c
0x0012: POP b
0x0015: POP a

0x0018: IMM i 0xd6

0x001b: IMM b 0x01
0x001e: ADD b s

0x0021: IMM d 0x43 ; 'C'
0x0024: PUSH d
0x0027: IMM d 0x4f ; 'O'
0x002a: PUSH d
0x002d: IMM d 0x52 ; 'R'
0x0030: PUSH d
0x0033: IMM d 0x52 ; 'R'
0x0036: PUSH d
0x0039: IMM d 0x45 ; 'E'
0x003c: PUSH d
0x003f: IMM d 0x43 ; 'C'
0x0042: PUSH d
0x0045: IMM d 0x54 ; 'T'
0x0048: PUSH d
0x004b: IMM d 0x21 ; '!'
0x004e: PUSH d
0x0051: IMM d 0x20 ; ' '
0x0054: PUSH d
0x0057: IMM d 0x59 ; 'Y'
0x005a: PUSH d
0x005d: IMM d 0x6f ; 'o'
0x0060: PUSH d
0x0063: IMM d 0x75 ; 'u'
0x0066: PUSH d
0x0069: IMM d 0x72 ; 'r'
0x006c: PUSH d
0x006f: IMM d 0x20 ; ' '
0x0072: PUSH d
0x0075: IMM d 0x66 ; 'f'
0x0078: PUSH d
0x007b: IMM d 0x6c ; 'l'
0x007e: PUSH d
0x0081: IMM d 0x61 ; 'a'
0x0084: PUSH d
0x0087: IMM d 0x67 ; 'g'
0x008a: PUSH d
0x008d: IMM d 0x3a ; ':'
0x0090: PUSH d
0x0093: IMM d 0x0a ; '\n'
0x0096: PUSH d

0x0099: IMM c 0x14
0x009c: IMM a 0x01
0x009f: SYS 0x04 d ; (sys_write)

0x00a2: IMM d 0x2f ; '/'
0x00a5: IMM c 0x80
0x00a8: STM c d

0x00ab: IMM d 0x66 ; 'f'
0x00ae: IMM c 0x81
0x00b1: STM c d

0x00b4: IMM d 0x6c ; 'l'
0x00b7: IMM c 0x82
0x00ba: STM c d

0x00bd: IMM d 0x61 ; 'a'
0x00c0: IMM c 0x83
0x00c3: STM c d

0x00c6: IMM d 0x67 ; 'g'
0x00c9: IMM c 0x84
0x00cc: STM c d

0x00cf: IMM d 0x00 ; '\0'
0x00d2: IMM c 0x85
0x00d5: STM c d

0x00d8: IMM a 0x80
0x00db: IMM b 0x00
0x00de: SYS 0x08 d ; (sys_open)

0x00e1: IMM b 0x00
0x00e4: ADD b s
0x00e7: IMM c 0xff
0x00ea: IMM a 0x00
0x00ed: ADD a d
0x00f0: SYS 0x10 d ; (sys_read)
0x00f3: IMM b 0x00
0x00f6: ADD b s
0x00f9: IMM c 0x00
0x00fc: ADD c d
0x00ff: IMM a 0x01
0x0102: SYS 0x04 d ; (sys_write)
0x0105: IMM a 0x00
0x0108: SYS 0x20  ; (sys_exit)

; from 0x0297
; __
0x010b: ADD a c
0x010e: ADD b c
0x0111: IMM d 0xff
0x0114: ADD a d
0x0117: ADD b d
0x011a: PUSH a
0x011d: PUSH b
0x0120: LDM a a
0x0123: LDM b b
0x0126: CMP a b
0x0129: POP b
0x012c: POP a
0x012f: IMM d 0x6c

0x0132: JMP 0x10 d

0x0135: IMM d 0xff
0x0138: ADD c d
0x013b: IMM d 0x00
0x013e: CMP c d
0x0141: IMM d 0x5a
0x0144: JMP 0x10 d
0x0147: POP d

; from 0x0132
0x014a: POP i

; __print_KEY__
0x014d: PUSH a
0x0150: PUSH b
0x0153: PUSH c

0x0156: IMM b 0x01
0x0159: ADD b s    ; keep string location at reg:b
0x015c: IMM d 0x4b ; 'K'
0x015f: PUSH d
0x0162: IMM d 0x45 ; 'E'
0x0165: PUSH d
0x0168: IMM d 0x59 ; 'Y'
0x016b: PUSH d
0x016e: IMM d 0x3a ; ':'
0x0171: PUSH d
0x0174: IMM d 0x20 ; ' '
0x0177: PUSH d

0x017a: IMM c 0x05 ; string length
0x017d: IMM a 0x01 ; stdout
0x0180: SYS 0x04 d ; (sys_write)

0x0183: POP c
0x0186: POP b
0x0189: POP a

; __read_key__
0x018c: PUSH a
0x018f: PUSH b
0x0192: PUSH c

0x0195: IMM b 0x30 ; into address 0x30
0x0198: IMM c 0x0e ; 14 chars
0x019b: IMM a 0x00 ; stdin
0x019e: SYS 0x10 d ; (sys_read)

0x01a1: POP c
0x01a4: POP b
0x01a7: POP a

0x01aa: IMM i 0x01

0x01ad: IMM b 0x01
0x01b0: ADD b s
0x01b3: IMM d 0x49
0x01b6: PUSH d
0x01b9: IMM d 0x4e
0x01bc: PUSH d
0x01bf: IMM d 0x43
0x01c2: PUSH d
0x01c5: IMM d 0x4f
0x01c8: PUSH d
0x01cb: IMM d 0x52
0x01ce: PUSH d
0x01d1: IMM d 0x52
0x01d4: PUSH d
0x01d7: IMM d 0x45
0x01da: PUSH d
0x01dd: IMM d 0x43
0x01e0: PUSH d
0x01e3: IMM d 0x54
0x01e6: PUSH d
0x01e9: IMM d 0x21
0x01ec: PUSH d
0x01ef: IMM d 0x0a
0x01f2: PUSH d
0x01f5: IMM c 0x0b
0x01f8: IMM a 0x01
0x01fb: SYS 0x04 d ; (sys_write)
0x01fe: IMM a 0x01
0x0201: SYS 0x20  ; (sys_exit)

; __entry__
;;; password - 14 chars - 0x51:0x5e
0x0204: IMM d 0x28
0x0207: IMM c 0x51
0x020a: STM c d

0x020d: IMM d 0x05
0x0210: IMM c 0x52
0x0213: STM c d

0x0216: IMM d 0x62
0x0219: IMM c 0x53
0x021c: STM c d

0x021f: IMM d 0xcd
0x0222: IMM c 0x54
0x0225: STM c d

0x0228: IMM d 0xee
0x022b: IMM c 0x55
0x022e: STM c d

0x0231: IMM d 0xb5
0x0234: IMM c 0x56
0x0237: STM c d

0x023a: IMM d 0xbd
0x023d: IMM c 0x57
0x0240: STM c d

0x0243: IMM d 0xf9
0x0246: IMM c 0x58
0x0249: STM c d

0x024c: IMM d 0x15
0x024f: IMM c 0x59
0x0252: STM c d

0x0255: IMM d 0x86
0x0258: IMM c 0x5a
0x025b: STM c d

0x025e: IMM d 0xf5
0x0261: IMM c 0x5b
0x0264: STM c d

0x0267: IMM d 0x37
0x026a: IMM c 0x5c
0x026d: STM c d

0x0270: IMM d 0xd7
0x0273: IMM c 0x5d
0x0276: STM c d

0x0279: IMM d 0x9a
0x027c: IMM c 0x5e
0x027f: STM c d

0x0282: IMM i 0x6e

; __func__
0x0285: IMM a 0x30
0x0288: IMM b 0x53
0x028b: IMM c 0x0c
0x028e: IMM d 0x02
0x0291: ADD d i
0x0294: PUSH d

0x0297: IMM i 0x58

; from 0x014a
0x029a: IMM c 0x00
0x029d: CMP d c
0x02a0: IMM d 0x08
0x02a3: JMP 0x04 d ; if d == 0: jump to 0x001b

0x02a6: IMM d 0x8e
0x02a9: JMP 0x09 d ; else jump to 0x01ad

